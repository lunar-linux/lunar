#!/bin/bash
#                                                                  #
#  edit.lunar - functions to edit files                            #
#                                                                  #
####################################################################
#                                                                  #
# Parts copyright Jason Johnston 2002 under GPLv2                  #
#                                                                  #
# Parts copyright Auke Kok 2002 under GPLv2                        #
#                                                                  #
####################################################################


# function : patch_it
# usage    : patch_it patch_file [patch_level]
# purpose  : calls "cmd $filename | patch -N -px -t", where filename may be a variety
#            of formats
patch_it () { 
  local PATCH CMD
  verbose_msg "patch_it \"$1\" \"$2\"";

  # get patch from $SOURCE_CACHE automatically
  if [ ! -f "$1" -a -f "$SOURCE_CACHE/$1" ] ; then
    PATCH="$SOURCE_CACHE/$1"
  else
    PATCH="$1"
  fi

  case $PATCH in
    *.tar.gz|*.tar.bz2|*.tar.xz|*.tgz|*.tar.Z|*.tar)
      CMD="tar xOf"
      ;;
    *.bz2)
      CMD="bzcat"
      ;;
    *.gz)
      CMD="zcat"
      ;;
    *.xz|*.lzma)
      CMD="xzcat"
      ;;
    *)
      CMD="cat"
      ;;
  esac

  # If no patch level was supplied lets try auto patching using plevel 1 or 0
  if [ -z "$2" ]; then
    if $CMD $PATCH | patch -N -p1 -t || $CMD $PATCH | patch -N -p0 -t; then
      return 0
    fi
  elif $CMD $PATCH | patch -N -p$2 -t; then
    # patch cmd is OK
    return 0
  fi

  message "${PROBLEM_COLOR}! Broken patch file ${DEFAULT_COLOR}${FILE_COLOR}$PATCH${DEFAULT_COLOR}"

  return 255
}


# function : sedit
# usage    : sedit sed-statement file [file [file] ...]
# purpose  : edit [files] with a sed function
sedit () {
  local SEDIT
  debug_msg "sedit ($@)"
  SEDIT=$1
  shift
  for FILE in $@ ; do
    verbose_msg "Editing \"$FILE\""
    sed -i "$SEDIT" "$FILE"
  done
}


# function : edit_file
# usage    : edit_file FILENAME
# purpose  : to edit a file
edit_file() {
  debug_msg "edit_file ($@)"
  ${EDITOR:-nano} $1
}


