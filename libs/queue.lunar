#!/bin/bash
#                                                          #
# This code is written for Lunar Linux, see                #
# http://lunar-linux.org                                   #
#                                                          #
############################################################
#                                                          #
# $FUNCTIONS/queue                                         #
# includes add_queue and remove_queue                      #
#                                                          #
# 20020527                                                 #
#                                                          #
############################################################
#                                                          #
# Copyrighted Kagan Kongar 2002 under GPLv2                #
#                                                          #
############################################################

# Definition:
# a queue is a multielement data structure from which elements
# can be removed only in the same order in which they are inserted;
# that is, it follows a FIFO constraint.

# function: add_queue
# usage   : add_queue <file_name> <item_name>
# purpose : adds an item to the end of a queue

add_queue() {
  debug_msg "add_queue ($@)"
   in_queue() {
  debug_msg "   in_queue ($@)"
      fgrep -xq "$2" "$1" && return 0 || return 1
   }

   [ "$#" -ne 2 ] && return 1

   [ -f "$1" ] || touch $1 2>/dev/null || return 1

   lock_file $1    &&
   ! in_queue $1 $2 && echo "$2" >> $1 
   unlock_file $1 
}

# function: remove_queue
# usage   : remove_queue <file_name> |name|
# purpose : removes an item from a queue OR pops the first element from a queue

remove_queue() {
  debug_msg "remove_queue ($@)"

   [ -f "$1" ] || return 1

   if [ -n "$2" ];
   then
      TMP_QUEUE="$TMPDIR/lunar_remove_queue.$$"
      rm -f $TMP_QUEUE 2>/dev/null
      lock_file $1                 &&
      cat "$1" | fgrep -xv "$2" > $TMP_QUEUE
      cat "$TMP_QUEUE" > $1
      unlock_file $1 
      rm -f $TMP_QUEUE 2>/dev/null 
   else
      lock_file $1                 && 
      echo `cat "$1" | sed 1!d`      &&
      cat "$1" | sed "1d" > $1       &&
      unlock_file $1
  fi
}


push_install_queue() {
  debug_msg "push_install_queue ($@)"
  remove_queue   $REMOVE_QUEUE    "$1"
  remove_queue   $INSTALL_QUEUE   "$1"
  !  module_installed             "$1"  &&
  add_queue  $INSTALL_QUEUE       "$1"
}


push_remove_queue() {
  debug_msg "push_remove_queue ($@)"
  remove_queue   $INSTALL_QUEUE  "$1"
  remove_queue   $REMOVE_QUEUE   "$1"
  module_installed               "$1"  &&
  add_queue  $REMOVE_QUEUE       "$1"
}


